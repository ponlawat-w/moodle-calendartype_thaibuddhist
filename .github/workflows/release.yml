name: Plugin Release

on:
  push:
    branches:
      - master

jobs:

  ci:
    name: CI
    uses: ./.github/workflows/ci.yml

  get-version:
    name: Get version info
    uses: ./.github/workflows/get-version.yml

  release:
    name: Release
    needs: [ci, get-version]
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ needs.get-version.outputs.plugin-release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Push to version branch
        run: |
          git config --global user.name "ponlawat-w"
          git config --global user.email "ponlawat_w@outlook.co.th"
          git checkout -b ${{ needs.get-version.outputs.branch-name }}
          git push -f -u origin ${{ needs.get-version.outputs.branch-name }}
      - name: Publish Tag
        run: |
          git config --global user.name "ponlawat-w"
          git config --global user.email "ponlawat_w@outlook.co.th"
          git tag -fa ${{ needs.get-version.outputs.plugin-release }} -m $(cat ./releases/${{ needs.get-version.outputs.plugin-release }}.md)
          git push --force origin ${{ needs.get-version.outputs.plugin-release }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.get-version.outputs.plugin-release }}
          name: ${{ needs.get-version.outputs.plugin-release }}
          body_path: ./releases/${{ needs.get-version.outputs.plugin-release }}.md

  # https://github.com/moodlehq/moodle-plugin-release
  publish:
    name: Publish
    needs: release
    runs-on: ubuntu-latest

    env:
      PLUGIN: calendartype_thaibuddhist
      CURL: curl -s
      ENDPOINT: https://moodle.org/webservice/rest/server.php
      TOKEN: ${{ secrets.MOODLE_TOKEN }}
      FUNCTION: local_plugins_add_version

    steps:
      - name: Call the service function
        id: add-version
        run: |
          if [[ ! -z "${{ needs.release.outputs.tag }}" ]]; then
            TAGNAME="${{ needs.release.outputs.tag }}"
          elif [[ $GITHUB_REF = refs/tags/* ]]; then
            TAGNAME="${GITHUB_REF##*/}"
          fi
          if [[ -z "${TAGNAME}" ]]; then
            echo "No tag name has been provided!"
            exit 1
          fi
          ZIPURL="https://api.github.com/repos/${{ github.repository }}/zipball/${TAGNAME}"
          RESPONSE=$(${CURL} ${ENDPOINT} --data-urlencode "wstoken=${TOKEN}" \
                                         --data-urlencode "wsfunction=${FUNCTION}" \
                                         --data-urlencode "moodlewsrestformat=json" \
                                         --data-urlencode "frankenstyle=${PLUGIN}" \
                                         --data-urlencode "zipurl=${ZIPURL}" \
                                         --data-urlencode "vcssystem=git" \
                                         --data-urlencode "vcsrepositoryurl=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" \
                                         --data-urlencode "vcstag=${TAGNAME}" \
                                         --data-urlencode "changelogurl=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commits/${TAGNAME}" \
                                         --data-urlencode "altdownloadurl=${ZIPURL}")
          echo "response=${RESPONSE}" >> $GITHUB_OUTPUT

      - name: Evaluate the response
        id: evaluate-response
        env:
          RESPONSE: ${{ steps.add-version.outputs.response }}
        run: |
          jq <<< ${RESPONSE}
          jq --exit-status ".id" <<< ${RESPONSE} > /dev/null
